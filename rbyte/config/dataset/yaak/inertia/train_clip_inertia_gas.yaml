_target_: rbyte.Dataset
_recursive_: false
_convert_: all
sources:
  Niro096-HQ/2023-01-11--13-47-36:
    cam_front_left:
      index_column: meta/ImageMetadata.cam_front_left/frame_idx
      source:
        _target_: rbyte.io.PathTensorSource
        path: ${paths.data}/Niro096-HQ/2023-01-11--13-47-36/frames/cam_front_left.pii.mp4/576x324/{:09d}.jpg
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
  Niro101-HQ/2022-12-25--09-58-33:
    cam_front_left:
      index_column: meta/ImageMetadata.cam_front_left/frame_idx
      source:
        _target_: rbyte.io.PathTensorSource
        path: ${paths.data}/Niro101-HQ/2022-12-25--09-58-33/frames/cam_front_left.pii.mp4/576x324/{:09d}.jpg
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
  Niro101-HQ/2022-12-30--09-23-51:
    cam_front_left:
      index_column: meta/ImageMetadata.cam_front_left/frame_idx
      source:
        _target_: rbyte.io.PathTensorSource
        path: ${paths.data}/Niro101-HQ/2022-12-30--09-23-51/frames/cam_front_left.pii.mp4/576x324/{:09d}.jpg
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
  Niro101-HQ/2022-12-31--09-57-24:
    cam_front_left:
      index_column: meta/ImageMetadata.cam_front_left/frame_idx
      source:
        _target_: rbyte.io.PathTensorSource
        path: ${paths.data}/Niro101-HQ/2022-12-31--09-57-24/frames/cam_front_left.pii.mp4/576x324/{:09d}.jpg
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
  Niro101-HQ/2023-01-01--09-31-43:
    cam_front_left:
      index_column: meta/ImageMetadata.cam_front_left/frame_idx
      source:
        _target_: rbyte.io.PathTensorSource
        path: ${paths.data}/Niro101-HQ/2023-01-01--09-31-43/frames/cam_front_left.pii.mp4/576x324/{:09d}.jpg
        decoder:
          _target_: simplejpeg.decode_jpeg
          _partial_: true
          colorspace: rgb
          fastdct: true
          fastupsample: true
samples:
  inputs:
    Niro096-HQ/2023-01-11--13-47-36:
      yaak_metadata_path: ${paths.data}/Niro096-HQ/2023-01-11--13-47-36/metadata.log
      waypoints_path: ${paths.data}/Niro096-HQ/2023-01-11--13-47-36/waypoints.json
      cam_front_left_path: ${paths.data}/Niro096-HQ/2023-01-11--13-47-36/frames/cam_front_left.pii.mp4/576x324
    Niro101-HQ/2022-12-25--09-58-33:
      yaak_metadata_path: ${paths.data}/Niro101-HQ/2022-12-25--09-58-33/metadata.log
      waypoints_path: ${paths.data}/Niro101-HQ/2022-12-25--09-58-33/waypoints.json
      cam_front_left_path: ${paths.data}/Niro101-HQ/2022-12-25--09-58-33/frames/cam_front_left.pii.mp4/576x324
    Niro101-HQ/2022-12-30--09-23-51:
      yaak_metadata_path: ${paths.data}/Niro101-HQ/2022-12-30--09-23-51/metadata.log
      waypoints_path: ${paths.data}/Niro101-HQ/2022-12-30--09-23-51/waypoints.json
      cam_front_left_path: ${paths.data}/Niro101-HQ/2022-12-30--09-23-51/frames/cam_front_left.pii.mp4/576x324
    Niro101-HQ/2022-12-31--09-57-24:
      yaak_metadata_path: ${paths.data}/Niro101-HQ/2022-12-31--09-57-24/metadata.log
      waypoints_path: ${paths.data}/Niro101-HQ/2022-12-31--09-57-24/waypoints.json
      cam_front_left_path: ${paths.data}/Niro101-HQ/2022-12-31--09-57-24/frames/cam_front_left.pii.mp4/576x324
    Niro101-HQ/2023-01-01--09-31-43:
      yaak_metadata_path: ${paths.data}/Niro101-HQ/2023-01-01--09-31-43/metadata.log
      waypoints_path: ${paths.data}/Niro101-HQ/2023-01-01--09-31-43/waypoints.json
      cam_front_left_path: ${paths.data}/Niro101-HQ/2023-01-01--09-31-43/frames/cam_front_left.pii.mp4/576x324
  executor:
    _target_: concurrent.futures.ProcessPoolExecutor
    mp_context:
      _target_: multiprocessing.get_context
      method: forkserver
  storage: shared_memory_dict
  scheduling_strategy: eager
  persist_memory: false
  pipeline:
    _target_: pipefunc.Pipeline
    validate_type_annotations: false
    cache_type: disk
    cache_kwargs:
      cache_dir: ${paths.rbyte.cache}
    functions:
    - _target_: pipefunc.PipeFunc
      renames:
        path: yaak_metadata_path
      output_name: meta_init
      mapspec: yaak_metadata_path[i] -> meta_init[i]
      cache: true
      func:
        _target_: rbyte.io.YaakMetadataDataFrameBuilder
        fields:
          rbyte.io.yaak.proto.sensor_pb2.ImageMetadata:
            time_stamp:
              _target_: polars.Datetime
              time_unit: us
            frame_idx:
              _target_: polars.Int32
            camera_name:
              _target_: polars.Enum
              categories:
              - cam_front_center
              - cam_front_left
              - cam_front_right
              - cam_left_forward
              - cam_right_forward
              - cam_left_backward
              - cam_right_backward
              - cam_rear
          rbyte.io.yaak.proto.can_pb2.VehicleState:
            time_stamp:
              _target_: polars.Datetime
              time_unit: us
            turn_signal:
              _target_: polars.Int8
          rbyte.io.yaak.proto.can_pb2.VehicleMotion:
            time_stamp:
              _target_: polars.Datetime
              time_unit: us
            speed:
              _target_: polars.Float32
            gas_pedal_normalized:
              _target_: polars.Float32
            brake_pedal_normalized:
              _target_: polars.Float32
            steering_angle_normalized:
              _target_: polars.Float32
            gear:
              _target_: polars.Enum
              categories:
              - "0"
              - "1"
              - "2"
              - "3"
          rbyte.io.yaak.proto.sensor_pb2.Gnss:
            time_stamp:
              _target_: polars.Datetime
              time_unit: us
            latitude:
              _target_: polars.Float32
            longitude:
              _target_: polars.Float32
    - _target_: pipefunc.PipeFunc
      renames:
        input: meta_init
      output_name: meta
      mapspec: meta_init[i] -> meta[i]
      func:
        _target_: rbyte2lerobot.io.MetadataAugmenter
        columns:
          time_stamp: time_stamp
          offset_seconds: offset_seconds
          offset_reverse_seconds: offset_reverse_seconds
        df_key: VehicleMotion
    - _target_: pipefunc.PipeFunc
      renames:
        path: waypoints_path
      output_name: waypoints_raw
      mapspec: waypoints_path[i] -> waypoints_raw[i]
      func:
        _target_: rbyte.io.DuckDbDataFrameBuilder
      bound:
        query: |
          LOAD spatial;
          SET TimeZone = 'UTC';
          SELECT TO_TIMESTAMP(timestamp)::TIMESTAMP as timestamp,
                 heading,
                 ST_AsWKB(ST_Transform(geom, 'EPSG:4326', 'EPSG:3857', always_xy := true)) AS geometry
          FROM ST_Read('{path}')
    - _target_: pipefunc.PipeFunc
      renames:
        input: waypoints_raw
      output_name: waypoints
      mapspec: waypoints_raw[i] -> waypoints[i]
      func:
        _target_: rbyte.io.WaypointBuilder
        length: 10
        columns:
          points: geometry
          output: waypoints
    - _target_: pipefunc.PipeFunc
      output_name: data
      mapspec: meta[i], waypoints[i] -> data[i]
      func:
        _target_: pipefunc.helpers.collect_kwargs
        parameters:
        - meta
        - waypoints
    - _target_: pipefunc.PipeFunc
      renames:
        input: data
      output_name: aligned
      mapspec: data[i] -> aligned[i]
      func:
        _target_: rbyte.io.DataFrameAligner
        separator: /
        fields:
          meta:
            ImageMetadata.cam_front_left:
              key: time_stamp
            VehicleState:
              key: time_stamp
              columns:
                turn_signal:
                  method: asof
                  tolerance: 100ms
            VehicleMotion:
              key: time_stamp
              columns:
                speed:
                  method: interp
                gas_pedal_normalized:
                  method: interp
                brake_pedal_normalized:
                  method: interp
                steering_angle_normalized:
                  method: interp
                offset_seconds:
                  method: interp
                offset_reverse_seconds:
                  method: interp
                gear:
                  method: asof
                  tolerance: 100ms
                  strategy: nearest
            Gnss:
              key: time_stamp
              columns:
                latitude:
                  method: asof
                  tolerance: 500ms
                  strategy: nearest
                longitude:
                  method: asof
                  tolerance: 500ms
                  strategy: nearest
          waypoints:
            key: timestamp
            columns:
              heading:
                method: asof
                strategy: nearest
              waypoints:
                method: asof
                strategy: nearest
    - _target_: pipefunc.PipeFunc
      renames:
        path: cam_front_left_path
      output_name: cam_front_left_meta
      mapspec: cam_front_left_path[i] -> cam_front_left_meta[i]
      cache: true
      func:
        _target_: rbyte.io.PathDataFrameBuilder
        pattern: (?<frame_idx>\d+).jpg
        fields:
          frame_idx:
            _target_: polars.Int32
    - _target_: pipefunc.PipeFunc
      output_name: query_context
      mapspec: aligned[i], cam_front_left_meta[i] -> query_context[i]
      func:
        _target_: pipefunc.helpers.collect_kwargs
        parameters:
        - aligned
        - cam_front_left_meta
    - _target_: pipefunc.PipeFunc
      renames:
        context: query_context
      output_name: filtered
      mapspec: query_context[i] -> filtered[i]
      func:
        _target_: rbyte.io.DataFrameDuckDbQuery
      bound:
        query: "LOAD spatial;\nSELECT \n  * EXCLUDE \"meta/VehicleMotion/gear\",\n  ST_AsWKB(\n    ST_Transform(\n      ST_Point(\"meta/Gnss/longitude\", \"meta/Gnss/latitude\"),\n      'EPSG:4326',\n      'EPSG:3857',\n      always_xy := true\n    )\n  ) as \"meta/Gnss/longitude_latitude\"\nFROM aligned\n  SEMI JOIN cam_front_left_meta\n    ON aligned.\"meta/ImageMetadata.cam_front_left/frame_idx\" = cam_front_left_meta.frame_idx\nWHERE COLUMNS(*) IS NOT NULL\n  AND aligned.\"meta/VehicleMotion/gear\" == '3'\n  AND aligned.\"meta/VehicleMotion/speed\" BETWEEN 0.0 AND 130.0\n  AND aligned.\"meta/VehicleMotion/gas_pedal_normalized\" BETWEEN 0.0 AND 1.0\n  AND aligned.\"meta/VehicleMotion/brake_pedal_normalized\" BETWEEN 0.0 AND 1.0\n  AND aligned.\"meta/VehicleMotion/steering_angle_normalized\" BETWEEN -1.0 AND 1.0\n"
    - _target_: pipefunc.PipeFunc
      renames:
        input: filtered
      output_name: with_waypoints_normalized
      mapspec: filtered[i] -> with_waypoints_normalized[i]
      func:
        _target_: rbyte.io.WaypointNormalizer
        columns:
          ego: meta/Gnss/longitude_latitude
          waypoints: waypoints/waypoints
          heading: waypoints/heading
          output: waypoints/waypoints_normalized
    - _target_: pipefunc.PipeFunc
      renames:
        df: with_waypoints_normalized
      output_name: with_waypoints_filtered
      mapspec: with_waypoints_normalized[i] -> with_waypoints_filtered[i]
      func:
        _target_: rbyte.io.DataFrameDuckDbQuery
      bound:
        query: |
          SELECT
            *
          FROM
            df
          WHERE
            list_max(apply(FLATTEN("waypoints/waypoints_normalized"), x -> ABS(x))) < 300
    - _target_: pipefunc.PipeFunc
      renames:
        input: with_waypoints_filtered
      output_name: samples
      mapspec: with_waypoints_filtered[i] -> samples[i]
      func:
        _target_: rbyte.io.DataFrameGroupByDynamic
        index_column: meta/ImageMetadata.cam_front_left/frame_idx
        every: 1i
        period: 101i
        closed: left
        gather_every: 1
    - _target_: pipefunc.PipeFunc
      renames:
        df: samples
      output_name: samples_cast
      mapspec: samples[i] -> samples_cast[i]
      func:
        _target_: rbyte.io.DataFrameDuckDbQuery
      bound:
        query: |-
          SELECT
              "meta/VehicleMotion/gas_pedal_normalized"::FLOAT[101] AS "debug.gas",
              "meta/VehicleMotion/speed"::FLOAT[101] AS "debug.speed",
              "meta/VehicleMotion/brake_pedal_normalized"::FLOAT[101] AS "debug.brake",
              "meta/VehicleMotion/steering_angle_normalized"::FLOAT[101] AS "debug.steering",
              format('https://nutron.yaak.ai/dataset/session-logs/REPLACE_ME?offset={}', ("meta/VehicleMotion/offset_seconds")[1]) as "nutron",
              ("meta/VehicleMotion/offset_reverse_seconds") AS "offset_reverse",
              list_slice("meta/ImageMetadata.cam_front_left/time_stamp"::TIMESTAMP[101], 1, 60, 10) AS "meta/ImageMetadata.cam_front_left/time_stamp",
              list_slice("meta/ImageMetadata.cam_front_left/frame_idx"::INT32[101], 1, 60, 10) AS "meta/ImageMetadata.cam_front_left/frame_idx",
              list_slice("meta/VehicleMotion/speed"::FLOAT[101], 1, 60, 10) AS "observation.state.vehicle",
              list_slice("meta/VehicleMotion/gas_pedal_normalized"::FLOAT[101],  52, 101, 1) AS "meta/VehicleMotion/gas_pedal_normalized",
              list_slice("meta/VehicleMotion/brake_pedal_normalized"::FLOAT[101],  52, 101, 1) AS "meta/VehicleMotion/brake_pedal_normalized",
              list_slice("meta/VehicleMotion/steering_angle_normalized"::FLOAT[101],  52, 101, 1) AS "meta/VehicleMotion/steering_angle_normalized",
              flatten(("waypoints/waypoints_normalized"::FLOAT[2][10][101])[51]) AS "observation.state.waypoints",
              'Given the waypoints and current vehicle speed, follow the waypoints while adhering to traffic rules and regulations' as "task"
          FROM
              df
          WHERE
              len("meta/ImageMetadata.cam_front_left/frame_idx") = 101
              AND list_last("meta/ImageMetadata.cam_front_left/frame_idx") - list_first("meta/ImageMetadata.cam_front_left/frame_idx") == 100
              AND NOT (
                  list_max(list_slice("meta/VehicleMotion/gas_pedal_normalized", 1, 60, 10)) <= (1.0 / 255 + 0.001)
                  AND list_max(list_slice("meta/VehicleMotion/brake_pedal_normalized", 1, 60, 10)) <= (1.0 / 164 + 0.001)
                  AND list_max(list_slice("meta/VehicleMotion/speed", 1, 60, 10)) >= 25.0
                  AND ("meta/VehicleMotion/speed")[51] - ("meta/VehicleMotion/speed")[1] >= -0.05 * list_avg(list_slice("meta/VehicleMotion/speed", 1, 60, 10))
              ) AND
              list_max(list_slice("meta/VehicleMotion/gas_pedal_normalized", 1, 60, 10)) <= (1.0 / 255 + 0.001) AND
              list_avg(list_slice("meta/VehicleMotion/gas_pedal_normalized", 52, 101, 1)) > 0.1 AND
              ("meta/VehicleMotion/gas_pedal_normalized")[52] > (1.0 / 255 + 0.001) AND
              list_avg(list_slice("meta/VehicleMotion/speed", 1, 51, 1)) <= 0.1 AND
              list_max(list_slice("meta/VehicleMotion/speed", 52, 101, 1)) > 5  AND
              list_max(list_slice("meta/VehicleMotion/brake_pedal_normalized", 1, 51, 1)) > 0.1
